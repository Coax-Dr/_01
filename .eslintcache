[{"F:\\STUDY\\react_components\\src\\reportWebVitals.js":"1","F:\\STUDY\\react_components\\src\\index.js":"2","F:\\STUDY\\react_components\\src\\components\\video_self\\index.tsx":"3","F:\\STUDY\\react_components\\src\\App.js":"4","F:\\STUDY\\react_components\\src\\components\\video_self\\components\\videoControl\\index.tsx":"5"},{"size":362,"mtime":1611838268478,"results":"6","hashOfConfig":"7"},{"size":500,"mtime":1611888026831,"results":"8","hashOfConfig":"7"},{"size":3411,"mtime":1611918299600,"results":"9","hashOfConfig":"7"},{"size":181,"mtime":1611888003450,"results":"10","hashOfConfig":"7"},{"size":1630,"mtime":1611921065044,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"tq4mwn",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"F:\\STUDY\\react_components\\src\\reportWebVitals.js",[],["25","26"],"F:\\STUDY\\react_components\\src\\index.js",[],["27","28"],"F:\\STUDY\\react_components\\src\\components\\video_self\\index.tsx",[],"F:\\STUDY\\react_components\\src\\App.js",[],"F:\\STUDY\\react_components\\src\\components\\video_self\\components\\videoControl\\index.tsx",["29"],"import React, { useRef, useEffect } from 'react'\r\nimport './index.css'\r\n\r\ninterface IProps {\r\n    status: 'progress' | 'control';\r\n    currentTime: number;\r\n    totalTime: number;\r\n}\r\n\r\nconst VideoControl = (props: IProps) => {\r\n    const { status, currentTime, totalTime } = props\r\n    const boxLine = useRef<HTMLDivElement>(null);\r\n    const controlLine = useRef<HTMLDivElement>(null);\r\n    const formatCurrentTime = Math.floor(currentTime);\r\n    const formatTotalTime = Math.floor(totalTime);\r\n    const progress = `${Math.floor(formatCurrentTime / formatTotalTime * 100)}%`\r\n    useEffect(() => updateProgress(), [progress]);\r\n    const updateProgress = () => {\r\n        const boxLineDom = boxLine.current as HTMLDivElement\r\n        const controlLineDom = controlLine.current as HTMLDivElement\r\n        if (status === 'progress') {\r\n            boxLineDom.style.width = progress;\r\n        } else {\r\n            controlLineDom.style.width = progress;\r\n        }\r\n    }\r\n    return (\r\n        <div className='video_control-box'>\r\n            <div className='box_line' ref={boxLine} style={status === 'progress' ? { opacity: 1 } : { opacity: 0 }} />\r\n            <div className='box_control'>\r\n                <div className='box_control-start'>{formatCurrentTime}</div>\r\n                <div className='box_control-line'>\r\n                    <div className='line_bar' ref={controlLine} style={status === 'control' ? { opacity: 1 } : { opacity: 0 }} />\r\n                </div>\r\n                <div className='box_control-end'>{formatTotalTime}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoControl;",{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"30","replacedBy":"34"},{"ruleId":"32","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":17,"column":39,"nodeType":"38","endLine":17,"endColumn":49,"suggestions":"39"},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],["40"],["41"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateProgress'. Either include it or remove the dependency array.","ArrayExpression",["42"],"no-global-assign","no-unsafe-negation",{"desc":"43","fix":"44"},"Update the dependencies array to be: [progress, updateProgress]",{"range":"45","text":"46"},[617,627],"[progress, updateProgress]"]